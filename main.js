!function(){"use strict";var e={d:function(t,n){for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}e.d({},{h:function(){return J}});var n=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popup=document.querySelector(".".concat(this._selector)),this._closeButton=this._popup.querySelector(".".concat(this._selector,"__close-button"))}var n,o;return n=e,(o=[{key:"open",value:function(){this._popup.classList.add("".concat(this._selector,"_opened"))}},{key:"close",value:function(){this._popup.classList.remove("".concat(this._selector,"_opened"))}},{key:"_handleEscClose",value:function(e){"Escape"==e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("keyup",(function(t){e._handleEscClose(t)})),this._popup.addEventListener("click",(function(t){t.target.classList.contains("".concat(e._selector,"_opened"))&&e.close()})),this._closeButton.addEventListener("click",(function(){e.close()}))}}])&&t(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleSubmitButton(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitButton()}))}))}},{key:"_toggleSubmitButton",value:function(){this._hasInvalidInput(this._inputList)?this._buttonElement.classList.add(this._inactiveButtonClass):this._buttonElement.classList.remove(this._inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function c(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=s(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},u.apply(this,arguments)}function s(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function l(e,t){if(t&&("object"===i(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(s,e);var t,n,o,r,i=(o=s,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(o);if(r){var n=f(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return l(this,e)});function s(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(t=i.call(this,e))._image=t._popup.querySelector(".image-popup__image"),t._subtitle=t._popup.querySelector(".image-popup__subtitle"),t}return t=s,(n=[{key:"open",value:function(e,t){this._image.src=e,this._image.alt=t,this._subtitle.textContent=t,u(f(s.prototype),"open",this).call(this)}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),s}(n),h=document.querySelector(".info__edit-button"),d=document.querySelector(".add-button"),_=new p("image-popup"),y=document.querySelector(".info__name"),b=document.querySelector(".info__job"),v=document.querySelector("#name-input"),m=document.querySelector("#job-input"),k=(document.querySelector(".popup_user"),document.querySelector(".popup_card"),document.querySelector(".profile__edit-button")),g={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input_type_error_active"};function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function w(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function O(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(u,e);var t,n,o,i,c=(o=u,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(o);if(i){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function u(e){var t,n=e.selector,o=e.sending;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=c.call(this,n))._form=document.querySelector(".".concat(t._selector)).querySelector(".form"),t._inputs={},t._closeButton=document.querySelector(".".concat(t._selector)).querySelector(".popup__close-button"),t._sendButton=t._form.querySelector(".form__submit"),t._sending=o,t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputsList.forEach((function(t){var n=t.id;e._inputs["".concat(n)]=t.value})),this._inputs}},{key:"_cleanInputsValues",value:function(){this._inputsList.forEach((function(e){e.value=""}))}},{key:"open",value:function(){this._sendButton.textContent="Salvar",this._inputsList=this._form.querySelectorAll(".form__input"),new r(g,this._form).setEventListeners(),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keyup",this.boundHandleEscClose),this._popup.removeEventListener("click",this.boundHandleClickOut),this._sendButton.removeEventListener("click",this.boundAdding),this._closeButton.removeEventListener("click",this.boundClose),this._sendButton.removeEventListener("click",this.boundAdding),this._popup.classList.remove("popup_opened"),this._cleanInputsValues()}},{key:"_adding",value:function(e){e.preventDefault(),this._sending()}},{key:"_handleEnter",value:function(e){"Enter"==e.key&&this._sendButton.classList.contains("form__submit_inactive")&&e.preventDefault()}},{key:"_handleClickOut",value:function(e){e.target.classList.contains("popup_opened")&&this.close()}},{key:"setEventListeners",value:function(){this.boundClose=this.close.bind(this),this.boundHandleEscClose=this._handleEscClose.bind(this),this.boundHandleClickOut=this._handleClickOut.bind(this),this.boundAdding=this._adding.bind(this),this.boundHandleEnter=this._handleEnter.bind(this),document.addEventListener("keyup",this.boundHandleEscClose),this._popup.addEventListener("click",this.boundHandleClickOut),this._closeButton.addEventListener("click",this.boundClose),this._sendButton.addEventListener("click",this.boundAdding),document.addEventListener("keydown",this.boundHandleEnter)}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(n);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function P(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=B(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},q.apply(this,arguments)}function B(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function T(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(o);if(r){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function c(e){var t,n=e.selector,o=e.sending;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,n))._closeButton=document.querySelector(".".concat(t._selector)).querySelector(".".concat(t._selector,"__close-button")),t._sendButton=t._popup.querySelector(".".concat(t._selector,"__submit")),t._sending=o,t}return t=c,(n=[{key:"setEventListener",value:function(){var e=this;q(R(c.prototype),"setEventListeners",this).call(this),this._sendButton.addEventListener("click",(function(){e._sending(),e.close()}))}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(n);function x(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var z=function(){function e(t,n,o){var r=o.handleCardClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._id=t._id,this._title=t.name,this._image=t.link,this._cardSelector=n,this._isLiked=!1,this._likes=t.likes.length,this._likers=t.likes,this._owner=t.owner,this.handleCardClick=r}var t,n;return t=e,(n=[{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._setImage(),this._setTitle(),this._setLikes(),this._element}},{key:"_getTemplate",value:function(){var e=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);return"6b339f11a0b51974bd983022"!=this._owner._id&&e.querySelector(".card__trash-icon").remove(),e}},{key:"_setImage",value:function(){var e=this._element.querySelector(".card__image");e.src=this._image,e.alt=this._title}},{key:"_setTitle",value:function(){this._element.querySelector(".card__title").textContent=this._title}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__like-button").addEventListener("click",(function(){e._handleLike()})),"6b339f11a0b51974bd983022"==this._owner._id&&this._element.querySelector(".card__trash-icon").addEventListener("click",(function(){var t=new U({selector:"confirmation-popup",sending:function(){e._deleteCard()}});t.open(),t.setEventListener()})),this._element.querySelector(".card__image").addEventListener("click",(function(){_.open(e._image,e._title),_.setEventListeners()}))}},{key:"_setLikes",value:function(){var e=this;this._element.querySelector(".card__likes").textContent=this._likes,this._likers.forEach((function(t){"6b339f11a0b51974bd983022"==t._id&&(e._element.querySelector(".card__like-button").classList.toggle("card__like-button_active"),e._isLiked=!0)}))}},{key:"_updateLikes",value:function(e){this._likes=e.length,this._likers=e}},{key:"_handleLike",value:function(){this._isLiked?this._unlike():this._like(),this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active"),this._isLiked=!this._isLiked}},{key:"_like",value:function(){J.likeCard(this._id)}},{key:"_unlike",value:function(){J.unlikeCard(this._id)}},{key:"_deleteCard",value:function(){J.deleteCard(this._id)}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var D=function(){function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=o,this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var N=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=t.name,this._userJob=t.about,this._userAvatar=t.avatar}var t,n;return t=e,(n=[{key:"updateUserData",value:function(e){this._userName=e.name,this._userJob=e.about,this._setUserInfo()}},{key:"getUserInfo",value:function(){return{name:this._userName,job:this._userJob}}},{key:"_setUserInfo",value:function(){var e=this.getUserInfo(),t=document.querySelector(".info__name"),n=document.querySelector(".info__job");t.textContent=e.name,n.textContent=e.job}},{key:"setAvatar",value:function(){document.querySelector(".profile__avatar-image").src=this._userAvatar}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var J=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.authorization=t.authorization}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){fetch("".concat(this.baseUrl,"cards"),{headers:{authorization:"".concat(this.authorization)}}).then((function(e){return e.json()})).then((function(e){var t=new D({items:e,renderer:function(e){var n=new z(e,"#card__template",{handleCardClick:function(){n.addEventListener("click",(function(){_.open(n._link,n._title)}))}});t.addItem(n.generateCard())}},".elements");t.renderItems()}))}},{key:"getUser",value:function(){fetch("".concat(this.baseUrl,"users/me"),{headers:{authorization:"".concat(this.authorization)}}).then((function(e){return e.json()})).then((function(e){var t=new N(e);return t.updateUserData(e),t.setAvatar(),console.log(e)}))}},{key:"updateUser",value:function(e){var t=this;fetch("".concat(this.baseUrl,"users/me"),{method:"PATCH",headers:{authorization:"".concat(this.authorization),"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about,avatar:e.avatar})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){return t.getUser(),console.log(e)})).catch((function(e){console.log(e)}))}},{key:"addNewCard",value:function(e){fetch("".concat(this.baseUrl,"cards"),{method:"POST",headers:{authorization:"".concat(this.authorization),"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){return document.location.reload(!0),console.log(e)})).catch((function(e){console.log(e)}))}},{key:"likeCard",value:function(e){fetch("".concat(this.baseUrl,"cards/likes/").concat(e),{method:"PUT",headers:{authorization:"".concat(this.authorization)}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){return document.location.reload(!0),console.log(e)})).catch((function(e){console.log(e)}))}},{key:"unlikeCard",value:function(e){fetch("".concat(this.baseUrl,"cards/likes/").concat(e),{method:"DELETE",headers:{authorization:"".concat(this.authorization)}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){return document.location.reload(!0),console.log(e)})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){fetch("".concat(this.baseUrl,"cards/").concat(e),{method:"DELETE",headers:{authorization:"".concat(this.authorization)}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){return document.location.reload(!0),console.log(e)})).catch((function(e){console.log(e)}))}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_cohort_01/",authorization:"4ffa3b89-8ef6-47e0-b012-e4475ed39e9b"});J.getInitialCards(),J.getUser(),h.addEventListener("click",(function(){var e=new j({selector:"popup_user",sending:function(){var t=e._getInputValues();J.updateUser({name:t["name-input"],about:t["job-input"]}),e.close()}});v.value=y.textContent,m.value=b.textContent,e.open(),e.setEventListeners()})),d.addEventListener("click",(function(){var e=new j({selector:"popup_card",sending:function(){var t=e._getInputValues();J.addNewCard({name:t["title-input"],link:t["image-input"]}),e.close()}});e.open(),e.setEventListeners()})),k.addEventListener("click",(function(){var e=new j({selector:"popup_avatar",sending:function(){var t=e._getInputValues();J.updateUser({name:y.textContent,about:b.textContent,avatar:t["image-input"]})}});e.open(),e.setEventListeners()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,