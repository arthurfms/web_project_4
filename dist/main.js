!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=e,this._popup=document.querySelector(".".concat(e)),this._closeButton=this._popup.querySelector(".".concat(e,"__close-button"))}var n,r;return n=t,(r=[{key:"open",value:function(){this._popup.classList.add("".concat(this._selector,"_opened"))}},{key:"close",value:function(){this._popup.classList.remove("".concat(this._selector,"_opened"))}},{key:"_handleEscClose",value:function(e){"Escape"==e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("keyup",(function(t){e._handleEscClose(t)})),this._popup.addEventListener("click",(function(t){t.target.classList.contains("".concat(e._selector,"_opened"))&&e.close()})),this._closeButton.addEventListener("click",(function(){e.close()}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,r;return t=e,(r=[{key:"setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleSubmitButton(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitButton()}))}))}},{key:"_toggleSubmitButton",value:function(){this._hasInvalidInput(this._inputList)?this._buttonElement.classList.add(this._inactiveButtonClass):this._buttonElement.classList.remove(this._inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(){return c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=u(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},c.apply(this,arguments)}function u(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}function s(e,t){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},s(e,t)}function a(e,t){if(t&&("object"===o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(p,e);var t,n,r,o,u=(r=p,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(r);if(o){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return a(this,e)});function p(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(t=u.call(this,e))._image=t._popup.querySelector(".image-popup__image"),t._subtitle=t._popup.querySelector(".image-popup__subtitle"),t}return t=p,(n=[{key:"open",value:function(e,t){this._image.src=e,this._image.alt=t,this._subtitle.textContent=t,c(l(p.prototype),"open",this).call(this)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),p}(t),f=[{name:"Vale de Yosemite",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lago Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Montanhas Carecas",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Parque Nacional da Vanoise ",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],_=document.querySelector(".info__edit-button"),d=document.querySelector(".add-button"),y=new p("image-popup"),h=document.querySelector(".info__name"),m=document.querySelector(".info__job"),v=document.querySelector("#name-input"),b=document.querySelector("#job-input"),g=(document.querySelector(".popup_user"),document.querySelector(".popup_card"),{formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input_type_error_active"});function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function w(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(u,e);var t,n,o,i,c=(o=u,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(o);if(i){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function u(e){var t,n=e.selector,r=e.sending;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=c.call(this,n))._form=document.querySelector(".".concat(t._selector)).querySelector(".form"),t._inputs={},t._closeButton=document.querySelector(".".concat(t._selector)).querySelector(".popup__close-button"),t._sendButton=t._form.querySelector(".form__submit"),t._sending=r,t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputsList.forEach((function(t){var n=t.id;e._inputs["".concat(n)]=t.value})),this._inputs}},{key:"open",value:function(){this._inputsList=this._form.querySelectorAll(".form__input"),new r(g,this._form).setEventListeners(),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("keyup",(function(t){e._handleEscClose(t)})),this._popup.addEventListener("click",(function(t){t.target.classList.contains("popup_opened")&&e.close()})),this._closeButton.addEventListener("click",(function(){e.close()})),this._sendButton.addEventListener("click",(function(t){t.preventDefault(),e._sending()})),document.addEventListener("keydown",(function(t){"Enter"==t.key&&e._sendButton.classList.contains("form__submit_inactive")&&t.preventDefault()}))}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(t);function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t,n,r){var o=r.handleCardClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=t.name,this._image=t.link,this._cardSelector=n,this._isLiked=!1,this.handleCardClick=o}var t,n;return t=e,(n=[{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._setImage(),this._setTitle(),this._element}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_setImage",value:function(){var e=this._element.querySelector(".card__image");e.src=this._image,e.alt=this._title}},{key:"_setTitle",value:function(){this._element.querySelector(".card__title").textContent=this._title}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__like-button").addEventListener("click",(function(){e._handleLike()})),this._element.querySelector(".card__trash-icon").addEventListener("click",(function(){e._deleteCard()})),this._element.querySelector(".card__image").addEventListener("click",(function(){y.open(e._image,e._title),y.setEventListeners()}))}},{key:"_handleLike",value:function(){this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active"),this._isLiked=!this._isLiked}},{key:"_deleteCard",value:function(){this._element.remove()}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=new(function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({items:f,renderer:function(e){var t=new O(e,"#card__template",{handleCardClick:function(){t.addEventListener("click",(function(){y.open(t._link,t._title)}))}});P.addItem(t.generateCard())}},".elements");P.renderItems(),_.addEventListener("click",(function(){var e=new C({selector:"popup_user",sending:function(){var t=e._getInputValues();h.textContent=t["name-input"],m.textContent=t["job-input"],e.close(),v.value=t["name-input"],b.value=t["job-input"]}});e.open(),e.setEventListeners()})),d.addEventListener("click",(function(){var e=new C({selector:"popup_card",sending:function(){var t=e._getInputValues();f.push({name:t["title-input"],link:t["image-input"]});var n=new O(f[f.length-1],"#card__template",{handleCardClick:function(){n.addEventListener("click",(function(){y.open(n._link,n._title)}))}}),r=n.generateCard();P.addItem(r),e.close()}});e.open(),e.setEventListeners()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,